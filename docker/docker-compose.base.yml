version: "3.9"

services:
  postgres-authentication:
    image: postgres:14.4
    container_name: postgres-authentication-db
    restart: always
    environment:
      POSTGRES_DB: postgres_auth_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin_password
    ports:
      - "5432:5432"
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data

  postgres-customer:
    image: postgres:14.4
    container_name: postgres-customer-service-db
    restart: always
    environment:
      POSTGRES_DB: postgres_customer_service_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin_password
    ports:
      - "5433:5432"
    volumes:
      - customer_postgres_data:/var/lib/postgresql/data

  postgres-account:
    image: postgres:14.4
    container_name: postgres-account-service-db
    restart: always
    environment:
      POSTGRES_DB: postgres_account_service_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin_password
    ports:
      - "5434:5432"
    volumes:
      - account_postgres_data:/var/lib/postgresql/data

#  service-registry:
#    image: service-registry:latest
#    container_name: service-registry
#    build:
#      context: ../service-registry
#      dockerfile: Dockerfile
#    ports:
#      - "8761:8761"
#    restart: always
#
#  api-gateway:
#    image: api-gateway:latest
#    container_name: api-gateway
#    build:
#      context: ../api-gateway
#      dockerfile: Dockerfile
#    ports:
#      - "8765:8765"
#    restart: always
#    depends_on:
#      - service-registry

volumes:
  auth_postgres_data:
  customer_postgres_data:
  account_postgres_data:
